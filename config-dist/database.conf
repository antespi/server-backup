# Server-Backup  Copyright (C) 2012
#                Antonio Espinosa <aespinosa at teachnova dot com>
#
# This file is part of Server-Backup by Teachnova (www.teachnova.com)
#
# Server-Backup is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Server-Backup is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Server-Backup.  If not, see <http://www.gnu.org/licenses/>.

# MYSQL
##########################################################

MYSQL_BIN=/usr/bin/mysql
MYSQLDUMP_BIN=/usr/bin/mysqldump

BAK_MYSQL_DATABASE_LIST_CMD="$MYSQL_BIN -Bse 'show databases;'"
BAK_MYSQL_DATABASE_BACKUP_CMD="mysql_dump"

mysql_dump() {
    local database=$1

    if [ -n "$database" ]; then
        $ECHO_BIN "    CMD : $MYSQLDUMP_BIN --opt --events --routines --single-transaction --quick $database" >> $BAK_OUTPUT_EXTENDED
        $MYSQLDUMP_BIN --opt --events --routines --single-transaction --quick $database
    fi
}

BAK_MYSQL_DATABASE_ENABLED=1

if [ ! -x "$MYSQL_BIN" ] || [ ! -x "$MYSQLDUMP_BIN" ]; then
    # Disabled because no mysql or mysqldump binaries found
    BAK_MYSQL_DATABASE_ENABLED=2
fi

# BAK_MYSQL_DATABASE_WARNING_IF_DOWN
# - If 1, write a warning (not an error) if MySQL is not active.
# Usefull in Standby servers on an HA cluster, where MySQL is not normally active
# BAK_MYSQL_DATABASE_WARNING_IF_DOWN=0 by default
BAK_MYSQL_DATABASE_WARNING_IF_DOWN=0

# BAK_MYSQL_DATABASE_DATA_IF_DOWN
# - If a valid path, make a backup of this folder if MySQL is not active.
# Usefull in Standby servers on an HA cluster, where MySQL is not normally active
# Example: BAK_MYSQL_DATABASE_DATA_IF_DOWN=/var/lib/mysql
# BAK_MYSQL_DATABASE_WARNING_IF_DOWN='' by default
BAK_MYSQL_DATABASE_DATA_IF_DOWN=

BAK_MYSQL_DATABASE_DIR=mysql
BAK_MYSQL_DATABASE_PATH=$BAK_DATA_PATH/$BAK_MYSQL_DATABASE_DIR

BAK_MYSQL_DATABASE_ALLOW_ALL=1
BAK_MYSQL_DATABASE_ALLOW=("mysql")
BAK_MYSQL_DATABASE_DISALLOW=("information_schema" "performance_schema" "test" "phpmyadmin")

# PostgreSQL
##########################################################

POSTGRESQL_BIN=/usr/bin/psql
POSTGRESQL_DUMP_BIN=/usr/bin/pg_dump
POSTGRESQL_LSCLUSTER_BIN=/usr/bin/pg_lsclusters
POSTGRESQL_CHECK_CMD="$POSTGRESQL_LSCLUSTER_BIN | $GREP_BIN -q online"

BAK_POSTGRESQL_DATABASE_LIST_CMD="su - postgres -c \"$POSTGRESQL_BIN --list -t -A -x\" | grep Name | cut -d'|' -f 2"
BAK_POSTGRESQL_DATABASE_BACKUP_CMD="postgresql_dump"

postgresql_dump() {
    local database=$1

    if [ -n "$database" ]; then
        $ECHO_BIN "    CMD : su - postgres -c '$POSTGRESQL_DUMP_BIN -Fp $database'" >> $BAK_OUTPUT_EXTENDED
        $SU_BIN postgres -c "$POSTGRESQL_DUMP_BIN -Fp $database"
    fi
}

BAK_POSTGRESQL_DATABASE_ENABLED=1

if [ ! -x "$POSTGRESQL_BIN" ] || [ ! -x "$POSTGRESQL_DUMP_BIN" ] || [ ! -x "$POSTGRESQL_LSCLUSTER_BIN" ]; then
    # Disabled because no psql or pgdump or pg_lscluster binaries found
    BAK_POSTGRESQL_DATABASE_ENABLED=2
fi

# BAK_POSTGRESQL_DATABASE_WARNING_IF_DOWN
# - If 1, write a warning (not an error) if PostgreSQL is not active.
# Usefull in Standby servers on an HA cluster, where PostgreSQL is not normally active
# BAK_POSTGRESQL_DATABASE_WARNING_IF_DOWN=0 by default
BAK_POSTGRESQL_DATABASE_WARNING_IF_DOWN=0

# BAK_POSTGRESQL_DATABASE_DATA_IF_DOWN
# - If a valid path, make a backup of this folder if PostgreSQL is not active.
# Usefull in Standby servers on an HA cluster, where PostgreSQL is not normally active
# Example: BAK_POSTGRESQL_DATABASE_DATA_IF_DOWN=/var/lib/postgresql/9.1/main
# BAK_POSTGRESQL_DATABASE_WARNING_IF_DOWN='' by default
BAK_POSTGRESQL_DATABASE_DATA_IF_DOWN=

BAK_POSTGRESQL_DATABASE_DIR=postgresql
BAK_POSTGRESQL_DATABASE_PATH=$BAK_DATA_PATH/$BAK_POSTGRESQL_DATABASE_DIR

BAK_POSTGRESQL_DATABASE_ALLOW_ALL=1
BAK_POSTGRESQL_DATABASE_ALLOW=("postgres")
BAK_POSTGRESQL_DATABASE_DISALLOW=("template0" "template1")
